/* There are useful explanations of this code in the folder "105- Flex-Wrap" --> app.css */

body {
    font-family: 'Open Sans', sans-serif;
}
h1, h2{
    text-align: center;
}
#container {
    background-color: #003049;
    width: 90%;
    /* height: 500px; */
    margin: 0 auto;
    border: 5px solid #003049;
    display: flex;
    flex-direction: row; /* row | row-reverse | column | column-reverse */
    justify-content: center; /* center | start | end | space-between | space-around | space-evenly | flex-start | flex-end | left | right */
    /* flex-wrap: wrap; */
}

#container div {
    width: 200px;
    height: 200px;
    /* max-width: 300px; */
    text-align: center;
    flex-basis: 600px;  /* flex-basis determines the initial size of an element before it's placed in. (the starting order before it's added into our flex container). Flex-basis might be a width or height, depending on the main axis direction. */
}

div:nth-of-type(1) {
    flex-grow: 1;  /* flex-grow controls the amount of available space an element should take up, if there is available space. This is the first div, we set the flex-grow as 1. And four lines below this code, we set flex-grow as 1 for the fifth div. So, the first one will take 1 unit of space, while the fifth one will take 2. */
    flex-shrink: 2; /* this is the opposite of 'flex-grow' */
}                   /* the shorthand keyword 'flex': is used to state the three properties shortly: flex-basis, flex-grow, flex-shrink. Examples:  flex:2 (flex-grow),  flex: 1 30px (flex-grow flex-basis),  flex: 2 2 (flex-grow flex-shrink),  flex: 2 2 10% (flex-grow flex-shrink flex-basis) */
div:nth-of-type(5) {
    flex-grow: 2;
}


main {
    width: 80%;
    margin: 0 auto;
    border: 5px solid black;
    height: 500px;
    display: flex;
}
main .sidebar {
    background-color: #6930c3;
    flex:1 2 300px;
}
main .maincontent {
    background-color: #80ffdb;
    flex: 2 1 800px;
}